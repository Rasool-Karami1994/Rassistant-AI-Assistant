/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './react/routes/__root'
import { Route as SubscriptionsListImport } from './react/routes/subscriptionsList'
import { Route as SubscriptionCartImport } from './react/routes/subscriptionCart'
import { Route as NewAdvertisementInstructionFormImport } from './react/routes/newAdvertisementInstructionForm'
import { Route as AdvertismentInstructionEditFormImport } from './react/routes/$advertismentInstructionEditForm'
import { Route as appRouteImport } from './react/routes/(app)/route'
import { Route as appSubscriptionIndexImport } from './react/routes/(app)/subscription/index'
import { Route as appInstructionsIndexImport } from './react/routes/(app)/instructions/index'
import { Route as appInformationIndexImport } from './react/routes/(app)/information/index'
import { Route as appHomepageIndexImport } from './react/routes/(app)/_homepage/index'
import { Route as appAdvertisementAdvertisementidIndexImport } from './react/routes/(app)/advertisement/$advertisement_id/index'

// Create/Update Routes

const SubscriptionsListRoute = SubscriptionsListImport.update({
  id: '/subscriptionsList',
  path: '/subscriptionsList',
  getParentRoute: () => rootRoute,
} as any)

const SubscriptionCartRoute = SubscriptionCartImport.update({
  id: '/subscriptionCart',
  path: '/subscriptionCart',
  getParentRoute: () => rootRoute,
} as any)

const NewAdvertisementInstructionFormRoute =
  NewAdvertisementInstructionFormImport.update({
    id: '/newAdvertisementInstructionForm',
    path: '/newAdvertisementInstructionForm',
    getParentRoute: () => rootRoute,
  } as any)

const AdvertismentInstructionEditFormRoute =
  AdvertismentInstructionEditFormImport.update({
    id: '/$advertismentInstructionEditForm',
    path: '/$advertismentInstructionEditForm',
    getParentRoute: () => rootRoute,
  } as any)

const appRouteRoute = appRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const appSubscriptionIndexRoute = appSubscriptionIndexImport.update({
  id: '/subscription/',
  path: '/subscription/',
  getParentRoute: () => appRouteRoute,
} as any)

const appInstructionsIndexRoute = appInstructionsIndexImport.update({
  id: '/instructions/',
  path: '/instructions/',
  getParentRoute: () => appRouteRoute,
} as any)

const appInformationIndexRoute = appInformationIndexImport.update({
  id: '/information/',
  path: '/information/',
  getParentRoute: () => appRouteRoute,
} as any)

const appHomepageIndexRoute = appHomepageIndexImport.update({
  id: '/_homepage/',
  path: '/',
  getParentRoute: () => appRouteRoute,
} as any)

const appAdvertisementAdvertisementidIndexRoute =
  appAdvertisementAdvertisementidIndexImport.update({
    id: '/advertisement/$advertisement_id/',
    path: '/advertisement/$advertisement_id/',
    getParentRoute: () => appRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteImport
      parentRoute: typeof rootRoute
    }
    '/$advertismentInstructionEditForm': {
      id: '/$advertismentInstructionEditForm'
      path: '/$advertismentInstructionEditForm'
      fullPath: '/$advertismentInstructionEditForm'
      preLoaderRoute: typeof AdvertismentInstructionEditFormImport
      parentRoute: typeof rootRoute
    }
    '/newAdvertisementInstructionForm': {
      id: '/newAdvertisementInstructionForm'
      path: '/newAdvertisementInstructionForm'
      fullPath: '/newAdvertisementInstructionForm'
      preLoaderRoute: typeof NewAdvertisementInstructionFormImport
      parentRoute: typeof rootRoute
    }
    '/subscriptionCart': {
      id: '/subscriptionCart'
      path: '/subscriptionCart'
      fullPath: '/subscriptionCart'
      preLoaderRoute: typeof SubscriptionCartImport
      parentRoute: typeof rootRoute
    }
    '/subscriptionsList': {
      id: '/subscriptionsList'
      path: '/subscriptionsList'
      fullPath: '/subscriptionsList'
      preLoaderRoute: typeof SubscriptionsListImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_homepage/': {
      id: '/(app)/_homepage/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appHomepageIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/information/': {
      id: '/(app)/information/'
      path: '/information'
      fullPath: '/information'
      preLoaderRoute: typeof appInformationIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/instructions/': {
      id: '/(app)/instructions/'
      path: '/instructions'
      fullPath: '/instructions'
      preLoaderRoute: typeof appInstructionsIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/subscription/': {
      id: '/(app)/subscription/'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof appSubscriptionIndexImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/advertisement/$advertisement_id/': {
      id: '/(app)/advertisement/$advertisement_id/'
      path: '/advertisement/$advertisement_id'
      fullPath: '/advertisement/$advertisement_id'
      preLoaderRoute: typeof appAdvertisementAdvertisementidIndexImport
      parentRoute: typeof appRouteImport
    }
  }
}

// Create and export the route tree

interface appRouteRouteChildren {
  appHomepageIndexRoute: typeof appHomepageIndexRoute
  appInformationIndexRoute: typeof appInformationIndexRoute
  appInstructionsIndexRoute: typeof appInstructionsIndexRoute
  appSubscriptionIndexRoute: typeof appSubscriptionIndexRoute
  appAdvertisementAdvertisementidIndexRoute: typeof appAdvertisementAdvertisementidIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appHomepageIndexRoute: appHomepageIndexRoute,
  appInformationIndexRoute: appInformationIndexRoute,
  appInstructionsIndexRoute: appInstructionsIndexRoute,
  appSubscriptionIndexRoute: appSubscriptionIndexRoute,
  appAdvertisementAdvertisementidIndexRoute:
    appAdvertisementAdvertisementidIndexRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof appHomepageIndexRoute
  '/$advertismentInstructionEditForm': typeof AdvertismentInstructionEditFormRoute
  '/newAdvertisementInstructionForm': typeof NewAdvertisementInstructionFormRoute
  '/subscriptionCart': typeof SubscriptionCartRoute
  '/subscriptionsList': typeof SubscriptionsListRoute
  '/information': typeof appInformationIndexRoute
  '/instructions': typeof appInstructionsIndexRoute
  '/subscription': typeof appSubscriptionIndexRoute
  '/advertisement/$advertisement_id': typeof appAdvertisementAdvertisementidIndexRoute
}

export interface FileRoutesByTo {
  '/$advertismentInstructionEditForm': typeof AdvertismentInstructionEditFormRoute
  '/newAdvertisementInstructionForm': typeof NewAdvertisementInstructionFormRoute
  '/subscriptionCart': typeof SubscriptionCartRoute
  '/subscriptionsList': typeof SubscriptionsListRoute
  '/': typeof appHomepageIndexRoute
  '/information': typeof appInformationIndexRoute
  '/instructions': typeof appInstructionsIndexRoute
  '/subscription': typeof appSubscriptionIndexRoute
  '/advertisement/$advertisement_id': typeof appAdvertisementAdvertisementidIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/$advertismentInstructionEditForm': typeof AdvertismentInstructionEditFormRoute
  '/newAdvertisementInstructionForm': typeof NewAdvertisementInstructionFormRoute
  '/subscriptionCart': typeof SubscriptionCartRoute
  '/subscriptionsList': typeof SubscriptionsListRoute
  '/(app)/_homepage/': typeof appHomepageIndexRoute
  '/(app)/information/': typeof appInformationIndexRoute
  '/(app)/instructions/': typeof appInstructionsIndexRoute
  '/(app)/subscription/': typeof appSubscriptionIndexRoute
  '/(app)/advertisement/$advertisement_id/': typeof appAdvertisementAdvertisementidIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$advertismentInstructionEditForm'
    | '/newAdvertisementInstructionForm'
    | '/subscriptionCart'
    | '/subscriptionsList'
    | '/information'
    | '/instructions'
    | '/subscription'
    | '/advertisement/$advertisement_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$advertismentInstructionEditForm'
    | '/newAdvertisementInstructionForm'
    | '/subscriptionCart'
    | '/subscriptionsList'
    | '/'
    | '/information'
    | '/instructions'
    | '/subscription'
    | '/advertisement/$advertisement_id'
  id:
    | '__root__'
    | '/(app)'
    | '/$advertismentInstructionEditForm'
    | '/newAdvertisementInstructionForm'
    | '/subscriptionCart'
    | '/subscriptionsList'
    | '/(app)/_homepage/'
    | '/(app)/information/'
    | '/(app)/instructions/'
    | '/(app)/subscription/'
    | '/(app)/advertisement/$advertisement_id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  AdvertismentInstructionEditFormRoute: typeof AdvertismentInstructionEditFormRoute
  NewAdvertisementInstructionFormRoute: typeof NewAdvertisementInstructionFormRoute
  SubscriptionCartRoute: typeof SubscriptionCartRoute
  SubscriptionsListRoute: typeof SubscriptionsListRoute
}

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  AdvertismentInstructionEditFormRoute: AdvertismentInstructionEditFormRoute,
  NewAdvertisementInstructionFormRoute: NewAdvertisementInstructionFormRoute,
  SubscriptionCartRoute: SubscriptionCartRoute,
  SubscriptionsListRoute: SubscriptionsListRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(app)",
        "/$advertismentInstructionEditForm",
        "/newAdvertisementInstructionForm",
        "/subscriptionCart",
        "/subscriptionsList"
      ]
    },
    "/(app)": {
      "filePath": "(app)/route.tsx",
      "children": [
        "/(app)/_homepage/",
        "/(app)/information/",
        "/(app)/instructions/",
        "/(app)/subscription/",
        "/(app)/advertisement/$advertisement_id/"
      ]
    },
    "/$advertismentInstructionEditForm": {
      "filePath": "$advertismentInstructionEditForm.tsx"
    },
    "/newAdvertisementInstructionForm": {
      "filePath": "newAdvertisementInstructionForm.tsx"
    },
    "/subscriptionCart": {
      "filePath": "subscriptionCart.tsx"
    },
    "/subscriptionsList": {
      "filePath": "subscriptionsList.tsx"
    },
    "/(app)/_homepage/": {
      "filePath": "(app)/_homepage/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/information/": {
      "filePath": "(app)/information/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/instructions/": {
      "filePath": "(app)/instructions/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/subscription/": {
      "filePath": "(app)/subscription/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/advertisement/$advertisement_id/": {
      "filePath": "(app)/advertisement/$advertisement_id/index.tsx",
      "parent": "/(app)"
    }
  }
}
ROUTE_MANIFEST_END */
